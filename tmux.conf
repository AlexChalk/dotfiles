###########################
#  Configuration
###########################

#----------#
# Controls #
#----------#

# Prefix key
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# Source tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Window/Pane/Session Management
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
bind-key b break-pane -d
bind-key C-j choose-tree
#bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# Break pane into new session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session and jump into next session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Moving between windows/panes/sessions
set-option -g base-index 0
set-option -g renumber-windows on

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Pane Resizing
bind -n M-H resize-pane -L 2
bind -n M-L resize-pane -R 2
bind -n M-J resize-pane -D 1
bind -n M-K resize-pane -U 1

bind -n M-h resize-pane -L 10
bind -n M-l resize-pane -R 10
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5

# Vim/emacs keybindings
setw -g mode-keys vi
set-option -g status-keys "emacs"

# No lag when exiting vim insert mode
set -s escape-time 0

# Activate +/* registers in vim
set -g default-command 'reattach-to-user-namespace $SHELL --login'

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Scrollback buffer size.
set -g history-limit 2000

#-------#
# THEME #
#-------#

# Status bar
set -g status-fg white 
set -g status-bg colour241 
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim

set -g status-interval 60 # refresh status bar

# Status bar left
set -g status-left-length 80
set -g status-left "[#S] "

# Status bar right
set -g status-right "#[fg=white] %a, %m/%d/%Y %H:%M "

# Command line
set -g message-fg white
set -g message-bg colour241
set -g message-attr bright

# Window list
set -g status-justify left

## Disable auto window naming
set-option -g allow-rename off

# Identify activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Active window
setw -g window-status-current-fg white
setw -g window-status-current-bg colour244
setw -g window-status-current-attr bright

# Active pane
set -g pane-border-fg white
set -g pane-border-bg black

set -g pane-active-border-fg green
set -g pane-active-border-bg black
set -g default-terminal "screen-256color"
