server_tokens off;

server {
    listen 80;

    location '/.well-known/acme-challenge' { 
                default_type "text/plain";
                root /tmp/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

#server {

#    ssl_protocols TLSv1.2;
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#    ssl_session_timeout 1d;
#    ssl_session_cache shared:SSL:50m;
#    ssl_session_tickets off;
#    ssl_stapling on;
#    ssl_stapling_verify on;

#    ssl_certificate /etc/letsencrypt/live/dev.roof.ai/fullchain.pem ;
#    ssl_certificate_key /etc/letsencrypt/live/dev.roof.ai/privkey.pem ;

#    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;	
#    add_header X-Frame-Options DENY always;
#    add_header X-Content-Type-Options nosniff always;
#    add_header X-XSS-Protection "1; mode=block" always;

#    listen 443 ssl;
#    server_name dev.roof.ai;

#    location ^~ /queue {
#        rewrite ^/queue(.*) $1 break;
#        proxy_pass http://127.0.0.1:5678;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";
#        proxy_set_header Host $host;
#        proxy_redirect off;		
#    }

    ## for FB deauthorize webhook
#    location ^~ /api {
#        rewrite ^/api(.*) $1/ break;
 #       proxy_pass http://127.0.0.1:3002;
 #       proxy_http_version 1.1;
 #       proxy_set_header Upgrade $http_upgrade;
 #       proxy_set_header Connection "upgrade";
#        proxy_set_header Host $host;
#        proxy_redirect off;		
#   }

#  location / {
#        return 404;
#   }
#}

server {

    # those are symlinks to /home/.../certificate/...
    ssl_certificate /usr/local/etc/roof_ssl_certificate;      
    ssl_certificate_key /usr/local/etc/roof_ssl_certificate_key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    listen 443 ssl;
    server_name local.roof.ai;

    location /broid-app {
      root /usr/share/nginx/html/;
      index index.html;
    }

    location ^~ /queue {
        rewrite ^/queue(.*) $1 break;
        proxy_pass http://127.0.0.1:5678;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;		
    }

    location ^~ /api {
        rewrite ^/api(.*) $1/ break;
        proxy_pass http://127.0.0.1:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;		
    }

    location ^~ /socket.io {
        proxy_pass http://127.0.0.1:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;		
    }

    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;		
    }
}
