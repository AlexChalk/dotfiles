[core]
  excludesfile = ~/dotfiles/gitignore_global
  autocrlf = input
  safecrlf = true
  pager = less -F -X
  editor = nvim
[user]
  name = Alexander Chalk
  email = contact@alexchalk.net
[color]
  ui = auto
[push]
  default = upstream
[merge]
  ff = only
[fetch]
  prune = true
[alias]
  a = add
  aa = add .
  aac = !git aa && git c
  aaca = !git aa && git ca
  b = branch
  browse = !hub browse
  c = commit
  ca = commit --amend
  ci = !hub ci-status
  clsfbF = !git branch --list --format '%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' | sed '/^$/d' | xargs git branch -D
  co = checkout
  coF = !git co . && git clean -fd
  df = diff --word-diff --color-words
  dfc = diff --word-diff --cached --color-words
  fall = fetch --all
  glog = log -E -i --grep
  hardF = reset --hard
  issues = !hub browse --issues
  la = log --oneline --decorate --graph --all
  lc = log --pretty=format:'%C(yellow)%h%C(reset) - %an [%C(green)%ar%C(reset)] %s'
  lm = log -1
  mo = "!f() { git merge $(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)); }; f"
  p = push
  pf = push --force-with-lease
  pr = !hub compare
  praise = blame
  r = rebase
  ra = rebase --abort
  rc = rebase --continue
  ri = rebase --interactive
  rpm = "!f() { git rebase --onto master $1 $2; }; f"
  rrF = "!f() { git reset --hard HEAD@{$1}; }; f"
  rmwt = "!f() { git worktree remove $1 && git branch -d wt-$1; }; f"
  s = stash -u
  sdF = stash drop
  sc = commit --amend --no-edit
  sl = stash list
  sla = log --oneline --decorate --graph --all -10
  sm = "!f() { git stash push -u --message $1; }; f"
  spn = "!f() { git stash pop stash@{$1}; }; f"
  uncommit = reset --soft HEAD^
  unstage = reset
  upm = !git checkout master && git pull && git checkout -
  rupm = !git upm && git rebase master
  ups = !git checkout staging && git pull && git checkout -
  rups = !git sup && git rebase staging
[diff]
  renames = copies
[rebase]
  autosquash = true
[credential]
  helper = osxkeychain
