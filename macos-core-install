#!/usr/bin/env bash

# # Upgrade Process
#
# ## Before you begin
# Note customizations in Finder > Preferences, and Finder > Presentation; system Preferences > Keyboard
#
# ## Initial Upgrade Process:
# 1. MacOS system settings:
# - Dock position/behaviour.
# - Computer name in "Sharing".
# - Airplay settings in "Monitors".
# - Finder: Finder > Preferences (general, tags, sidebar), Finder > (right click in white space) > show view options for default behaviour.
# - Keyboard: modifiers, repetitions, text, shortcuts (launchpad, screenshots, spotlight), input sources.
# - Spaces: Mission Control -> untick 'automatically rearrange spaces based on most recent use'
# - Trackpad point and click.
# 2. Firefox
# - Customize
# - Extensions, themes
# - Search
# 3. zshenv
# - `source $HOME/dotfiles/zsh/aliases.zsh`
#
# ## Misc
# - Adblocker (ublock) filters:
#   - @@||local.adguard.com/$third-party,script
#   - ||accounts.google.com/gsi/iframe/select*$third-party
#   https://kb.adguard.com/en/general/how-to-create-your-own-ad-filters
# - Access token for hub: https://github.com/github/hub/issues/2655#issuecomment-735836048
# - Remember to improve this guide as you perform your next upgrade.

cd $HOME
touch .hushlogin

echo "Getting command line tools"
xcode-select --install

echo "Setting up SSH"
# https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
ssh-keygen -t ed25519 -C "contact@alexchalk.net"
eval "$(ssh-agent -s)"
ssh-add $HOME/.ssh/id_ed25519
if [[ "$OSTYPE" == darwin* ]]; then
  echo "Host *\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/id_ed25519" >> $HOME/.ssh/config
fi

echo "Getting personal fonts"
git clone git@github.com:AlexChalk/fonts-private.git $HOME/Library/Fonts

echo "Clone Personal Notes"
git clone git@github.com:AlexChalk/personal-wiki.git $HOME/vimwiki
git clone https://github.com/haskell/haskell-ide-engine --recurse-submodules

echo "Setting up nix, make sure filevault encryption of main drive is complete"
sh <(curl -L https://releases.nixos.org/nix/nix-2.3.16/install) --darwin-use-unencrypted-nix-store-volume --no-daemon

nix-channel --add https://nixos.org/channels/nixpkgs-23.05-darwin nixpkgs-stable
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs-unstable
nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs   
nix-channel --update
nix-env --install --attr nixpkgs.nix nixpkgs.cacert

diskutil list | grep -i nix
diskutil apfs encryptvolume {{your-device-name}} -user disk # (store password, before entering)
diskutil apfs list # reboot if encryption is complete

echo "Vim Plug Setup"
curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Setting up homebrew"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
brew tap homebrew/cask-versions

echo "Misc. non-nix"
brew install \
  circleci \
  openapi-generator \
  openjdk@17

echo "Graalvm (nix broken on mac)"
brew install \
  clojure-lsp/brew/clojure-lsp-native \
  borkdude/brew/babashka

echo "Window managers"
brew install \
  koekeishiya/formulae/yabai \
  koekeishiya/formulae/skhd

brew services start yabai
brew services start skhd

echo "Casks"
brew install --cask \
  1password \
  adguard \
  carbon-copy-cloner \
  dash \
  discord \
  docker \
  firefox \
  flux \
  insomnia \
  keepingyouawake \
  kitty \
  loom \
  maestral \
  mark-text \
  mp3tag \
  ngrok \
  obsidian \
  postgres-unofficial \
  signal \
  temurin17 \
  tomatobar \
  homebrew/cask-drivers/uhk-agent \
  zoom

sudo mkdir -p /etc/paths.d && echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp
